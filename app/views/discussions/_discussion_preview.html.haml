- discussion_reader = @discussion_reader_cache.get_for(discussion)
- unread_comments_count = discussion_reader.unread_comments_count
- motion = discussion.current_motion

- if motion
  - motion_reader = @motion_reader_cache.get_for(motion)
  - last_vote = @last_vote_cache.get_for(motion)
  - unread_votes_count = motion_reader.unread_activity_count

- class_names = []
- class_names << 'showing-group' unless @group == discussion.group
- class_names << 'unread' if discussion_reader.unread_activity?

.clearfix
  %div.discussion-preview{ class: class_names.join(' ') }
    %a.selector-discussion-link{ href: discussion_path(discussion) }
      - if user_signed_in? && motion
        .vote-icon
          - if can?(:vote, motion)
            .activity-icon{class: "position-#{last_vote.position}-icon"}

      .discussion-title
        = discussion.title
        - if @group.nil?
          .group-name
            - if discussion.group.is_subgroup?
              = discussion.group.parent.name
              %span.name-separator
                â–¶
            = discussion.group.name

        - elsif @group != discussion.group
          .group-name= discussion.group_name

      - if motion
        .icon.shim{:id => "graph_#{motion.id}"}
          .motion-sparkline
            = motion_sparkline(motion)
          - if motion.voting? && motion_reader.unread_activity_count > 0
            %span.activity-count.label.label-info.unread-comments-count{title: t(:'tooltip.new_votes')}
              = motion_reader.unread_activity_count
      - else
        .large-icon.pie-icon.activity-icon

      - if unread_comments_count == 0
        .large-icon.discussion-icon.activity-icon.disabled-icon
      -else
        .large-icon.discussion-icon.activity-icon.enabled-icon
          %span.activity-count.label.label-info.unread-comments-count{title: t(:'tooltip.unread_comments')}
            = unread_comments_count

      .discussion-date-info.hidden-xs
        -if motion
          .proposal-close-date= t( :time_until_close, quantity_of_time: time_ago_in_words(motion.closing_at) )
        - else
          .latest-comment-time= t( :ago, quantity_of_time: time_ago_in_words(discussion.last_activity_at) )
