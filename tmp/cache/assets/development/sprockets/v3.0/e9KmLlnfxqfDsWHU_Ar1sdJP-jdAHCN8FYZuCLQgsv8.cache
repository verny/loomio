I"Ù(function() {
  var parseEmailsFromString;

  $(function() {
    var autocomplete_path;
    $('#new_invite_people_form').on('submit', function(e) {
      var emails;
      emails = parseEmailsFromString($('#invitees').val());
      return $(".recipients").val(emails.toString());
    });
    if ($(".js-autocomplete-contacts").length > 0) {
      autocomplete_path = $('.js-autocomplete-contacts').data('autocomplete-path');
      return $("textarea.js-autocomplete-contacts").atwho({
        at: '',
        tpl: "<li id='${id}' data-value='${name_and_email}, '>${name} &lt;${email}&gt;</li>",
        limit: 5,
        callbacks: {
          remote_filter: function(query, callback) {
            if (query.length > 2) {
              return $.getJSON(autocomplete_path, {
                q: query
              }, function(data) {
                return callback(data);
              });
            }
          }
        }
      });
    }
  });

  parseEmailsFromString = function(input_emails) {
    var matches, parsed_emails, regex;
    parsed_emails = [];
    regex = /[^\s<,]+?@[^>,\s]+/g;
    while ((matches = regex.exec(input_emails))) {
      parsed_emails.push(matches[0]);
    }
    return parsed_emails;
  };

}).call(this);
:ET